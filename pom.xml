<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>person.marlon</groupId>
    <artifactId>diamond</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--packaging不配默认为jar，配pom什么都不会产生，一般用于父模块-->
    <packaging>pom</packaging>
    <name>diamond</name>
    <modules>
        <module>war</module>
        <module>common</module>
        <module>task</module>
        <module>service</module>
        <module>dao</module>
        <module>web</module>
    </modules>


    <!--描述性属性，optional
    <name>Test</name>-->
    <!--<url>person.marlon.brilliant.cn</url>-->

    <properties>
        <!--和其他自定义属性不同，编码属性这么设置maven会自动识别
        https://maven.apache.org/plugins/maven-resources-plugin/examples/encoding.html-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <spring.version>5.3.19</spring.version>
        <gson.version>2.8.5</gson.version>
        <hibernate.version>5.2.5.Final</hibernate.version>
        <!--<shiro.version>1.2.4</shiro.version>-->
        <!--<mina.version>2.0.13</mina.version>-->
        <!-- google api version-->
        <project.http.version>1.20.0</project.http.version>
        <project.oauth.version>1.20.0</project.oauth.version>
        <!--<junit.version>4.12</junit.version>-->
        <junit.jupiter.version>5.4.2</junit.jupiter.version>
        <!--<junit.vintage.version>5.2.0</junit.vintage.version>-->
        <junit.platform.version>1.2.0</junit.platform.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Framework -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
                <!--switch off commons-logging-->
                <!--<exclusions>-->
                    <!--<exclusion>-->
                        <!--<groupId>commons-logging</groupId>-->
                        <!--<artifactId>commons-logging</artifactId>-->
                    <!--</exclusion>-->
                <!--</exclusions>-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
                <!-- Note the scope can be declared as runtime if you don’t need to compile against
                 Spring APIs, which is typically the case for basic dependency injection use cases.-->
                <!--<scope>runtime</scope>-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-oxm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-instrument</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-websocket</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-messaging</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!--<dependency>-->
                <!--<groupId>org.springframework</groupId>-->
                <!--<artifactId>spring-instrument-tomcat</artifactId>-->
                <!--<version>${spring.version}</version>-->
            <!--</dependency>-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa -->
            <!--<dependency>-->
                <!--<groupId>org.springframework.data</groupId>-->
                <!--<artifactId>spring-data-jpa</artifactId>-->
                <!--<version>2.0.5.RELEASE</version>-->
            <!--</dependency>-->

            <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
            <!--<dependency>-->
                <!--<groupId>com.alibaba</groupId>-->
                <!--<artifactId>druid</artifactId>-->
                <!--<version>1.1.6</version>-->
            <!--</dependency>-->

            <!-- Google Json -->
            <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/junit/junit -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/javax.servlet.jsp/jsp-api -->
            <!--<dependency>-->
                <!--<groupId>javax.servlet.jsp</groupId>-->
                <!--<artifactId>jsp-api</artifactId>-->
                <!--<version>2.2</version>-->
            <!--</dependency>-->

            <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <!--<version>3.1.0</version>-->
                <version>4.0.0</version>
                <scope>provided</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api -->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.3.2</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.58</version>
            </dependency>

            <!-- google Bitmap算法实现：https://mvnrepository.com/artifact/com.googlecode.javaewah/JavaEWAH -->
            <dependency>
                <groupId>com.googlecode.javaewah</groupId>
                <artifactId>JavaEWAH</artifactId>
                <version>1.1.6</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.velocity/velocity -->
            <!--<dependency>-->
                <!--<groupId>org.apache.velocity</groupId>-->
                <!--<artifactId>velocity</artifactId>-->
                <!--<version>1.7</version>-->
            <!--</dependency>-->

            <!-- https://mvnrepository.com/artifact/org.apache.velocity/velocity-tools -->
            <!--<dependency>-->
                <!--<groupId>org.apache.velocity</groupId>-->
                <!--<artifactId>velocity-tools</artifactId>-->
                <!--<version>2.0</version>-->
            <!--</dependency>-->

            <!--
                Attention: Be sure nothing pulls in an old dependency with groupId
                "freemarker" (without the "org."), because then you will end up with
                two freemarker.jar-s and unpredictable behavior!
            -->
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>2.3.28</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>3.3.1</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.9</version>
            </dependency>

            <!--=====================LOG DEPENDENCY START==========================-->
            <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.25</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>1.7.25</version>
                <scope>runtime</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>1.2.3</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.2.3</version>
                <!--<scope>test</scope>-->
            </dependency>
            <!--=====================LOG DEPENDENCY END==========================-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.46</version>
                <scope>runtime</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>27.0-jre</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/cn.jpush.api/jpush-client -->
            <dependency>
                <groupId>cn.jpush.api</groupId>
                <artifactId>jpush-client</artifactId>
                <version>3.4.3</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/cn.jpush.api/jiguang-common -->
            <dependency>
                <groupId>cn.jpush.api</groupId>
                <artifactId>jiguang-common</artifactId>
                <version>1.1.7</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>4.1.6.Final</version>
                <scope>compile</scope>
            </dependency>
            <!-- For log4j -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>
        </dependencies>

    </dependencyManagement>
    <build>
        <!--optional -->
        <!--<finalName>Diamond</finalName>-->
        <!--http://www.mojohaus.org/versions-maven-plugin/-->
        <!--插件版本mvn versions:display-plugin-updates:scans a project's plugins and produces a report of those plugins which have newer versions available. -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <!--Maven 提供了自己的构建插件，这些插件已打包且可立即使用，而且预先配置了默认值。通过“约定高于配置”原则，
                    可以确保能够针对给定任务的复杂性来扩展配置。大部分构建任务都只需极少的配置。-->
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <!--自定义 Maven 插件的行为。使用 Maven 的 <configuration> 元素，很容易重写插件默认值并定义新值。毫无疑问，
                    大部分重写的默认值是 compiler 插件的 <source> 和 <target> 值。-->
                    <configuration>
                        <source>${java.version}</source><!-- 源代码使用的开发版本 -->
                        <target>${java.version}</target><!-- 需要生成的目标class文件的编译版本 -->
                        <!-- 一般而言，target和source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行,target可以改低 -->
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.21.0</version>
                    <configuration>
                        <includes>
                            <include>**/Test*.java</include>
                            <include>**/*Test.java</include>
                            <include>**/*Tests.java</include>
                            <include>**/*TestCase.java</include>
                            <include>**/RepeatedTestsDemo.java</include>
                        </includes>
                        <properties>
                             <includeTags>my-tag,aaa</includeTags>
                             <!--<includeTags>aaa</includeTags>-->
                            <!--<excludeTags>slow</excludeTags>-->
                            <!--
                            <configurationParameters>
                                junit.jupiter.conditions.deactivate = *
                            </configurationParameters>
                            -->
                        </properties>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>${junit.platform.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.junit.jupiter</groupId>
                            <artifactId>junit-jupiter-engine</artifactId>
                            <version>${junit.jupiter.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>