<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
          version="3.1"><!--id = "test" （可配置项）-->

    <display-name>Diamond</display-name>

    <!--<welcome-file-list>-->
    <!--<welcome-file>index.html</welcome-file>-->
    <!--<welcome-file>index.htm</welcome-file>-->
    <!--<welcome-file>index.jsp</welcome-file>-->
    <!--<welcome-file>default.html</welcome-file>-->
    <!--<welcome-file>default.htm</welcome-file>-->
    <!--<welcome-file>default.jsp</welcome-file>-->
    <!--</welcome-file-list>-->

    <!--编码：为了能够处理中文的post请求，再配置一个encodingFilter，以避免post请求中文出现乱码情况：-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--配置监听器-->
    <!-- spring全局监听 -->
    <!--Spring监听器 ApplicationContext 载入 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 读取Spring配置文件；applicationContext.xml -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!-- 如果是监听多个文件，可用‘，’隔开 -->
        <!--<param-value>classpath*:*context.xml,classpath*:context/*context.xml</param-value>-->
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 因为spring-servlet.xml只是 controller 级别的上下文，说白了就是 servlet 级别的初始化，它不涉及到除了转发之外的任何实体，
        所以它的作用范围仅仅限制在 servlet 级别，所以它的初始化应该是跟spring 的 DispatcherServlet 初始化在一起，所以就是在 <servlet> 表情中初始化的。
        它有一个默认值就是【servlet-name】-servlet.xml
        -->
        <!--注意配置文件的对应的名称是【servlet-name】-servlet.xml，所以如果你没有给servlet 制定配置文件的位置，并且在默认位置下也没有配置文件，那么系统启动的时候就会报错
        可以通过contextConfigLocation来自定义SpringMVC配置文件的位置，如不指定，则默认在WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，此时文件名必须为[<servlet-name>]-servlet.xml，否则会出错-->
        <!--以下init-param是自定义SpringMVC的配置文件的位置 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/springMVC-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/demo/*</url-pattern>
    </servlet-mapping>
    <!-- Spring MVC 核心配置结束 -->

    <!--测试用Servlet-->
    <!--<servlet>-->
        <!--<servlet-name>MyHttpServlet</servlet-name>-->
        <!--<servlet-class>person.marlon.diamond.demo.MyHttpServletBean</servlet-class>-->
            <!--&lt;!&ndash; 自定义Servlet，通过继承HttpServletBean（其直接继承了HttpServlet）,设置了set方法，可以直接读到这里配置的参数&ndash;&gt;-->
            <!--<init-param>-->
            <!--<param-name>name</param-name>-->
            <!--<param-value>marlon wang</param-value>-->
        <!--</init-param>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>MyHttpServlet</servlet-name>-->
        <!--<url-pattern>/name</url-pattern>-->
    <!--</servlet-mapping>-->

    <!--&lt;!&ndash; StatViewServlet是一个标准的Servlet &ndash;&gt;-->
    <!--<servlet>-->
        <!--<servlet-name>DruidStatView</servlet-name>-->
        <!--<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>DruidStatView</servlet-name>-->
        <!--<url-pattern>/druid/*</url-pattern>-->
    <!--</servlet-mapping>-->

</web-app>